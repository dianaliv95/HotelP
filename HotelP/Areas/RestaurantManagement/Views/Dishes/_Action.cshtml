@model Hotel.Areas.RestaurantManagement.ViewModels.DishActionModel

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title">
            @if (Model.ID > 0)
            {
                <span>Edit Dish</span>
            }
            else
            {
                <span>Create Dish</span>
            }
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body">
        <form id="createDishForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="ID" value="@Model.ID" />

            <!-- Nazwa dania -->
            <div class="mb-3">
                <label for="nameInput" class="form-label">Name</label>
                <input type="text" class="form-control" id="nameInput" name="Name" placeholder="Enter Dish Name" value="@Model.Name" required />
                <div class="invalid-feedback">Please enter a valid dish name.</div>
            </div>

            <!-- Kategorie (dropdown) -->
            <div class="mb-3">
                <label for="categorySelect" class="form-label">Category</label>
                <select class="form-select" id="categorySelect" name="CategoryID" required>
                    <option value="">Select a category</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.ID" @(category.ID == Model.CategoryID ? "selected" : "")>
                            @category.Name
                        </option>
                    }
                </select>
                <div class="invalid-feedback">Please select a category.</div>
            </div>

            <!-- Cena dania -->
            <div class="mb-3">
                <label for="priceInput" class="form-label">Price</label>
                <input type="number" class="form-control" id="priceInput" name="Price" placeholder="Enter Dish Price" value="@Model.Price" step="0.01" min="0.01" required />
                <div class="invalid-feedback">Please enter a valid price (minimum 0.01).</div>
            </div>

            <!-- Opis dania -->
            <div class="mb-3">
                <label for="descriptionInput" class="form-label">Description</label>
                <textarea class="form-control" id="descriptionInput" name="Description" placeholder="Enter Dish Description">@Model.Description</textarea>
                <div class="invalid-feedback">Please provide a valid description.</div>
            </div>
        </form>

        <div class="errorDiv"></div>
    </div>
    <div class="modal-footer">
        <button id="saveButton" type="button" class="btn btn-primary">
            <i class="fa-solid fa-floppy-disk mr-1"></i> Save
        </button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            <i class="fa-solid fa-xmark mr-1"></i> Close
        </button>
    </div>
</div>

@section Scripts {
    <script>
        $(document).on("click", "#saveButton", function (e) {
            e.preventDefault();

            const formData = $("#createDishForm").serialize(); // Serializacja danych formularza

            $.ajax({
                url: '@Url.Action("Action", "Dishes", new { area = "RestaurantManagement" })',
                type: 'POST',
                data: formData,
                success: function (result) {
                    if (result && result.success) {
                        alert("Dish saved successfully!");
                        $("#actionModal").modal("hide"); // Ukrycie modal
                        location.reload(); // Odświeżenie strony
                    } else {
                        $(".errorDiv").html(result.message || "An unknown error occurred.");
                        alert(result.message || "An error occurred.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                    console.error("Response:", xhr.responseText);
                    alert("Failed to save the dish. Please try again.");
                }
            });
        });

        // Walidacja pól formularza
        (function () {
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}
