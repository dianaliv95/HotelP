@model Hotel.Areas.RestaurantManagement.ViewModels.DishActionModel

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title">
            @if (Model.ID > 0)
            {
                <span>Edit Dish</span>
            }
            else
            {
                <span>Create Dish</span>
            }
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
    </div>

    <div class="modal-body">
        <form id="createDishForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="ID" value="@Model.ID" />

            <div class="mb-3">
                <label class="form-label">Dish Name</label>
                <input type="text" class="form-control" name="Name"
                       value="@Model.Name" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Category</label>
                <select class="form-select" name="CategoryID" required>
                    <option value="">-- Select Category --</option>
                    @foreach (var cat in Model.Categories)
                    {
                        <option value="@cat.ID" @(cat.ID == Model.CategoryID ? "selected" : "")>
                            @cat.Name
                        </option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Price</label>
                <input type="number" class="form-control" name="Price"
                       step="0.01" min="0.01"
                       value="@Model.Price" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Description</label>
                <textarea class="form-control"
                          name="Description">@Model.Description</textarea>
            </div>

            <!-- Upload plików -->
            <div class="mb-3">
                <label class="form-label">Pictures</label>
                <input id="selectPictures" type="file" name="Picture" multiple
                       class="form-control" />

                <!-- Hidden do ID-ów wgranych zdjęć -->
                <input type="hidden" id="pictureIDs" name="PictureIDs" />
            </div>

            <!-- Podgląd miniatur -->
            <div id="picturesArea">
                @if (Model.DishPictures != null && Model.DishPictures.Any())
                {
                    foreach (var dp in Model.DishPictures)
                    {
                        <img src="/images/site/@dp.Picture.URL"
                             style="width:80px; margin:3px; cursor:pointer;"
                             data-id="@dp.PictureID"
                             onclick="removeMe(this)" />
                    }
                }
            </div>
        </form>

        <div class="errorDiv text-danger"></div>
    </div>

    <div class="modal-footer">
        <button id="saveButton" type="button" class="btn btn-primary">
            Save
        </button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            Close
        </button>
    </div>
</div>

<!-- Template do klonowania obrazka -->
<div id="imageTemplate" style="display:none;">
    <img src="" style="width:80px; margin:3px; cursor:pointer;" onclick="removeMe(this)" />
</div>

@section Scripts {
    <script>
        // Upload
        $(document).on("change", "#selectPictures", function () {
            var files = this.files;
            var formData = new FormData();

            for (var i = 0; i < files.length; i++) {
                formData.append("Picture", files[i]);
            }

            $.ajax({
                url: '@Url.Action("UploadPictures", "Dashboard", new { area = "Dashboard" })',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (res) {
                    // res => [ {id=..., url=...}, ... ]
                    for (var i = 0; i < res.length; i++) {
                        var pic = res[i];
                        var $tmpl = $("#imageTemplate").clone();
                        $tmpl.removeAttr("id").show();
                        $tmpl.find("img").attr("src", "/images/site/" + pic.url);
                        $tmpl.find("img").attr("data-id", pic.id);
                        $("#picturesArea").append($tmpl.html());
                    }
                },
                error: function () {
                    alert("Error uploading files");
                }
            });
        });

        // removeMe
        window.removeMe = function (imgElem) {
            $(imgElem).remove();
        };

        // SAVE
        $(document).on("click", "#saveButton", function () {
            // Zbieramy ID-ki
            var ids = [];
            $("#picturesArea img").each(function () {
                var pid = $(this).attr("data-id");
                if (pid) ids.push(pid);
            });
            $("#pictureIDs").val(ids.join());

            var formData = $("#createDishForm").serialize();
            $.post('@Url.Action("Action", "Dishes", new { area = "RestaurantManagement" })',
                formData,
                function (res) {
                    if (res && res.success) {
                        alert("Dish saved!");
                        $("#actionModal").modal("hide");
                        location.reload();
                    } else {
                        $(".errorDiv").text(res.message || "Unknown error");
                    }
                })
                .fail(function () {
                    alert("Server error saving dish.");
                });
        });
    </script>
}
