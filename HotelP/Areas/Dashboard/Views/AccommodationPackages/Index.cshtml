@model Hotel.Areas.RestaurantManagement.ViewModels.DishesListingModel

<div class="row">
    <div class="col-lg-12">
        <h2>Dishes</h2>
        <hr />
    </div>
</div>

<!-- Form wyszukiwania + przycisk Create -->
<div class="row mb-3">
    <div class="col-lg-12">
        <form method="get" asp-action="Index" asp-controller="Dishes" asp-area="RestaurantManagement">
            <div class="input-group">
                <input type="text" name="searchTerm" class="form-control"
                       placeholder="Search Dishes" value="@Model.SearchTerm" />

                <select name="categoryId" class="form-select">
                    <option value="">-- All Categories --</option>
                    @if (Model.Categories != null)
                    {
                        foreach (var category in Model.Categories)
                        {
                            <option value="@category.ID" @(category.ID == Model.SelectedCategoryId ? "selected" : null)>
                                @category.Name
                            </option>
                        }
                    }
                </select>

                <div class="input-group-append">
                    <button class="btn btn-outline-primary" type="submit">
                        <i class="fa-solid fa-magnifying-glass mr-1"></i> Search
                    </button>

                    <a href="@Url.Action("Index", "Dishes", new { area = "RestaurantManagement" })"
                       class="btn btn-outline-secondary">
                        <i class="fa-solid fa-rotate-right mr-1"></i> Reset
                    </a>

                    <button type="button"
                            data-href="@Url.Action("Action", "Dishes", new { area = "RestaurantManagement" })"
                            class="btn btn-outline-success create-btn"
                            data-bs-toggle="modal"
                            data-bs-target="#actionModal">
                        <i class="fa-solid fa-plus mr-1"></i> Create
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Lista Dishes w partialu _Listing -->
<div class="row">
    <div class="col-lg-12">
        @Html.Partial("_Listing", Model.Dishes)
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="actionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
    </div>
</div>

@section Scripts {
    <script>
        //---------------------------------------------------
        // A. Obsługa przycisków Create / Edit / Delete
        //---------------------------------------------------
        // 1) CREATE
        $(document).on("click", ".create-btn", function (e) {
            e.preventDefault();
            const url = $(this).data("href");

            $.get(url, function (responseHtml) {
                $("#actionModal .modal-dialog").html(responseHtml);
                $("#actionModal").modal("show");
            }).fail(function () {
                alert("Failed to load the Create form.");
            });
        });

        // 2) EDIT
        $(document).on("click", ".edit-btn", function (e) {
            e.preventDefault();
            const url = $(this).data("href");

            $.get(url, function (responseHtml) {
                $("#actionModal .modal-dialog").html(responseHtml);
                $("#actionModal").modal("show");
            }).fail(function () {
                alert("Failed to load the Edit form.");
            });
        });

        // 3) DELETE
        $(document).on("click", ".delete-btn", function (e) {
            e.preventDefault();
            const url = $(this).data("href");

            $.get(url, function (responseHtml) {
                $("#actionModal .modal-dialog").html(responseHtml);
                $("#actionModal").modal("show");
            }).fail(function () {
                alert("Failed to load the Delete form.");
            });
        });

        //---------------------------------------------------
        // B. Obsługa potwierdzenia Delete (wewnątrz modala)
        //---------------------------------------------------
        $(document).on("click", "#deleteButton", function (e) {
            e.preventDefault();
            const formData = $("#deleteDishForm").serialize();

            $.ajax({
                url: '@Url.Action("Delete", "Dishes", new { area = "RestaurantManagement" })',
                type: 'POST',
                data: formData,
                success: function (result) {
                    if (result && result.success) {
                        alert("Dish has been successfully deleted!");
                        $("#actionModal").modal("hide");
                        location.reload();
                    } else {
                        alert("Error: " + (result.message || "Unknown error."));
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error status:", status);
                    console.error("Error message:", error);
                    console.error("Server response:", xhr.responseText);
                    alert("An error occurred while deleting the record.");
                }
            });
        });

        //---------------------------------------------------
        // C. Upload plików (#selectPictures) -> Dashboard/UploadPictures
        // (jeśli chcesz, by Dish miał zdjęcia analogicznie do AccommodationPackage)
        //---------------------------------------------------
        $(document).on("change", "#selectPictures", function () {
            var files = this.files;
            var formData = new FormData();

            for (var i = 0; i < files.length; i++) {
                formData.append("Picture", files[i]);
            }

            $.ajax({
                url: '@Url.Action("UploadPictures", "Dashboard", new { area = "Dashboard" })',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false
            })
                .done(function (response) {
                    // Zwracane dane: [{ id, url }, ...]
                    for (var i = 0; i < response.length; i++) {
                        var pic = response[i];
                        console.log("Dodaję #picturesArea obrazek o ID =", pic.id, ", url =", pic.url);

                        var $template = $("#imageTemplate").clone();
                        $template.removeAttr("id");
                        $template.show();

                        $template.find("img").attr("src", "/images/site/" + pic.url);
                        $template.find("img").attr("data-id", pic.id);

                        $("#picturesArea").append($template.html());
                    }
                })
                .fail(function (xhr, status, error) {
                    alert("Failed to upload pictures.");
                    console.error("Status:", status, "Error:", error);
                });
        });

        //---------------------------------------------------
        // D. Kliknięcie #saveButton -> wywołanie akcji Dishes/Action (POST)
        // (o ile masz w partialu `#saveButton`).
        //---------------------------------------------------
        $(document).on("click", "#saveButton", function (e) {
            e.preventDefault();

            // Zbieranie ID obrazków:
            var pictureIDs = [];
            $("#picturesArea img").each(function () {
                var pid = $(this).attr("data-id");
                if (pid) pictureIDs.push(pid);
            });

            $("#pictureIDs").val(pictureIDs.join());

            // Wysyłka formularza
            var formData = $("#createDishForm").serialize();

            $.ajax({
                url: '@Url.Action("Action", "Dishes", new { area = "RestaurantManagement" })',
                type: 'POST',
                data: formData,
                success: function (res) {
                    if (res && res.success) {
                        alert("Dish saved successfully!");
                        $("#actionModal").modal("hide");
                        location.reload();
                    } else {
                        alert("Error: " + (res.message || "Unknown error."));
                    }
                },
                error: function (xhr, status, error) {
                    alert("Error saving dish. Check console logs.");
                    console.error("xhr:", xhr.responseText);
                }
            });
        });

        //---------------------------------------------------
        // E. Funkcja removeMe(el) do usuwania <img>
        // (z partial `_Action.cshtml`).
        //---------------------------------------------------
        window.removeMe = function (element) {
            $(element).remove();
        };

    </script>
}
